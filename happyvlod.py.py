import streamlit as st
from pathlib import Path
import base64
import mimetypes

# --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ---
SECRET_CODEWORD = "–õ–µ–π–∫–æ–ø–ª–∞—Å—Ç–µ—Ä"
PERSON_NAME = "–õ–µ–π–∫–æ–ø–ª–∞—Å—Ç–µ—Ä"
PROMO_CODE = "17963"

# –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏:
# –ï—Å–ª–∏ —Ñ–∞–π–ª –ª–µ–∂–∏—Ç —Ä—è–¥–æ–º —Å app.py:
IMAGE_FILE_NAME = "my_photo.jpg.jpg"

IMAGE_PATH = Path(__file__).parent / IMAGE_FILE_NAME

def image_to_data_uri(path: Path) -> str:
    """
    –ß–∏—Ç–∞–µ—Ç —Ñ–∞–π–ª, –∫–æ–¥–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ base64 –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç data URI,
    —á—Ç–æ–±—ã –∫–∞—Ä—Ç–∏–Ω–∫—É –º–æ–∂–Ω–æ –±—ã–ª–æ –≤—Å—Ç–∞–≤–∏—Ç—å –≤ <img src="..."> –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö —Å—Å—ã–ª–æ–∫.
    """
    mime, _ = mimetypes.guess_type(str(path))
    if mime is None:
        mime = "image/jpeg"
    encoded = base64.b64encode(path.read_bytes()).decode("ascii")
    return f"data:{mime};base64,{encoded}"

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
st.set_page_config(page_title="–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ –î–µ–Ω—å –†–æ–∂–¥–µ–Ω–∏—è", page_icon="üéâ")

# --- CSS –¥–ª—è –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏ ---
st.markdown("""
<style>
    .main .block-container {
        padding-top: 2rem;
        padding-bottom: 2rem;
    }
    .stButton > button {
        width: 100%;
        border: 1px solid grey;
        border-radius: 8px;
        color: black;
        background-color: white;
        font-family: 'Calibri', sans-serif;
    }
    .stButton > button:hover {
        border-color: black;
        color: black;
        background-color: #f0f0f0;
    }
</style>
""", unsafe_allow_html=True)

# --- –õ–æ–≥–∏–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
if "authenticated" not in st.session_state:
    st.session_state["authenticated"] = False

def check_codeword():
    entered_code = st.session_state.get("codeword_input", "")
    if entered_code == SECRET_CODEWORD:
        st.session_state["authenticated"] = True
        if "codeword_input" in st.session_state:
            del st.session_state["codeword_input"]
    elif entered_code != "":
        st.error("–ö–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ –Ω–µ–≤–µ—Ä–Ω–æ")

# --- –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü ---
if not st.session_state["authenticated"]:
    col1, col2, col3 = st.columns([1, 2, 1])
    with col2:
        st.markdown(
            "<h3 style='text-align: center; font-family: Calibri;'>–í–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å, –ú–∏—Å—Ç–µ—Ä —Å–æ—Å–∏—Å—Ç–µ—Ä, –∫–æ–ª–±–∞—Å—Ç–µ—Ä –∏ —Å–∞–º—ã–π –Ω–∞—Å—Ç–æ—è—â–∏–π ... –∫—Ç–æ?.</h3>",
            unsafe_allow_html=True
        )

        st.text_input(
            "–ö–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ",
            label_visibility="collapsed",
            key="codeword_input",
            type="password",
            on_change=check_codeword
        )
        st.button("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", on_click=check_codeword)

else:
    # CSS –¥–ª—è –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω–æ–≥–æ —Ñ–æ–Ω–∞ –í–¢–û–†–û–ô —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    st.markdown("""
    <style>
    .stApp {
        background-image: linear-gradient(to top, #F13A13, #FFFFFF);
        background-attachment: fixed;
        background-size: cover;
    }
    </style>
    """, unsafe_allow_html=True)

    st.balloons()

    st.markdown(
        f"<h1 style='text-align: center; font-family: Calibri;'>{PERSON_NAME}, —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è!</h1>,</h1>",
        unsafe_allow_html=True
    )
    st.markdown(
        "<p style='text-align: center; font-family: Calibri; font-size: 1.2em;'>–ü—Ä–∏–º–∏ –æ—Ç –Ω–∞—Å —Å–æ –°–≤–µ—Ç–∫–æ–π —ç—Ç–æ—Ç —Å–∫—Ä–æ–º–Ω—ã–π –¥–∞—Ä :)</p>",
        unsafe_allow_html=True
    )

    st.markdown("---")

    # –ë–ª–æ–∫ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –ü–ï–†–ï–î –ø—Ä–æ–º–æ–∫–æ–¥–æ–º
    if IMAGE_PATH.exists():
        IMAGE_DATA_URI = image_to_data_uri(IMAGE_PATH)

        st.markdown(
            "<h3 style='text-align: center; font-family: Calibri;'>–¢–≤–æ—è –∫–∞—Ä—Ç–∏–Ω–∫–∞</h3>,</h3>",
            unsafe_allow_html=True
        )
        st.markdown(f"""
        <div style="
            background-color: #FFFFFF;
            border-radius: 0.5rem;
            padding: 1em;
            text-align: center;
        ">
            <img src="{IMAGE_DATA_URI}" style="max-width: 100%; border-radius: 0.5rem;" />
        </div>
        """, unsafe_allow_html=True)
    else:
        # –ü–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç
        st.warning(f"–ö–∞—Ä—Ç–∏–Ω–∫–∞ '{IMAGE_FILE_NAME}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –æ–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏ –ø—É—Ç—å —É–∫–∞–∑–∞–Ω –≤–µ—Ä–Ω–æ.")
        # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ —Ä—è–¥–æ–º —Å app.py:
        try:
            files = [p.name for p in Path(__file__).parent.iterdir()]
            st.caption("–§–∞–π–ª—ã —Ä—è–¥–æ–º —Å app.py:")
            st.write(files)
        except Exception:
            pass

    # –ë–ª–æ–∫ —Å –ø—Ä–æ–º–æ–∫–æ–¥–æ–º
    st.markdown(
        "<h3 style='text-align: center; font-family: Calibri;'>–¢–≤–æ–π –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ –¥—Ä–∏—Ñ—Ç 28.10.2025:</h3>",
        unsafe_allow_html=True
    )
    st.markdown(f"""
    <div style="
        background-color: #FFFFFF;
        border-radius: 0.5rem;
        padding: 1em;
        font-family: monospace;
        font-size: 1.25em;
        text-align: center;
        overflow-wrap: break-word;
    ">
        {PROMO_CODE}
    </div>
    """, unsafe_allow_html=True)
